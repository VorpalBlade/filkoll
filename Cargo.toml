[workspace]
members = ["crates/*"]
resolver = "2"

[workspace.dependencies]
anstream = "0.6.18"
anstyle = "1.0.10"
bstr = "1.12.0"
camino = "1.1.9"
clap = { version = "4.5.38", features = ["derive"] }
clap_complete = "4.5.48"
clap_mangen = "0.2.26"
color-eyre = "0.6.3"
compact_str = { version = "0.9.0", features = ["smallvec"] }
eyre = "0.6.12"
flate2 = { version = "1.1.1", default-features = false, features = ["zlib-rs"] }
hashbrown = "0.15.3"
indoc = "2.0.6"
itertools = "0.14.0"
memmap2 = "0.9.5"
mimalloc = "=0.1.44"
pretty_assertions = "1.4.1"
rayon = "1.10.0"
regex = { version = "1.11.1", default-features = false, features = [
    "perf",
    "std",
] }
rkyv = { version = "0.8.10", features = [
    "aligned",
    "hashbrown-0_15",
    "smallvec-1",
] }
rust-ini = "0.21.1"
smallvec = { version = "1.15.0", features = [
    "const_generics",
    "const_new",
    "union",
] }
strsim = "0.11.1"
tar = "0.4.44"
tracing = "0.1.41"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
type_hash = "0.3.0"
xz2 = { version = "0.1.7", features = ["static"] }
zerocopy = { version = "0.8.25", features = ["derive"] }
zstd = "0.13.3"

[workspace.lints.rust]
elided_lifetimes_in_paths = "warn"
keyword_idents = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
redundant_lifetimes = "warn"
rust_2018_idioms = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unit_bindings = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

[workspace.lints.clippy]
assigning_clones = "warn"
cast_lossless = "warn"
cloned_instead_of_copied = "warn"
derive_partial_eq_without_eq = "warn"
doc_markdown = "warn"
equatable_if_let = "warn"
explicit_iter_loop = "warn"
flat_map_option = "warn"
format_push_string = "warn"
ignored_unit_patterns = "warn"
manual_assert = "warn"
manual_let_else = "warn"
manual_string_new = "warn"
needless_pass_by_value = "warn"
or_fun_call = "warn"
ptr_as_ptr = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
semicolon_if_nothing_returned = "warn"
type_repetition_in_bounds = "warn"
undocumented_unsafe_blocks = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_safety_doc = "warn"
unnested_or_patterns = "warn"
unwrap_used = "warn"
use_self = "warn"
wildcard_imports = "warn"

[profile.dev]
debug = 2
split-debuginfo = "unpacked"

[profile.release]
lto = "thin"
opt-level = 2

[profile.profiling]
debug = 2
inherits = "release"
lto = false

[profile.dev.package]
# Needed for reasonable performance
flate2.opt-level = 2
