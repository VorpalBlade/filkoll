name: Build (helper)

permissions:
  contents: read

on:
  workflow_call:

env:
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  CARGO_TERM_COLOR: always
  FILKOLL_BUILDER: github-ci
  RUST_BACKTRACE: 1
  CC: clang
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

jobs:
  modern-default:
    # Test modern compilers on standard platforms on Linux.
    name: "${{ matrix.target }} - ${{ matrix.rust }} (default configuration)"
    runs-on: ubuntu-latest
    env:
      CARGO_PROFILE_DEV_DEBUG: 1
      CARGO_PROFILE_DEV_SPLIT_DEBUGINFO: ${{ matrix.debug_info }}
      RUSTFLAGS: -D warnings -Clink-arg=-Wl,--compress-debug-sections=zlib
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf
          - i686-unknown-linux-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        rust:
          - stable
          - nightly
        debug_info:
          - packed
        include:
          # RISCV doesn't work with split debug info (see rust-lang/rust#110224)
          - target: riscv64gc-unknown-linux-gnu
            rust: stable
            debug_info: off
          - target: riscv64gc-unknown-linux-gnu
            rust: nightly
            debug_info: off
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup install --profile minimal ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Print environment info
        run: |
          echo "# Rust"
          rustc -Vv
          echo "# Cargo"
          cargo -Vv
          echo "# GCC"
          gcc -v
          echo "# Clang"
          clang -v
          echo "# Ld"
          ld -v
      - name: Install cross
        uses: taiki-e/install-action@491d37bbaa844af8400b3595395e1bca723e6141 # v2.55.1
        with:
          tool: cross@latest
      # TODO: Cache is broken for cross compiles, figure this out
      #- name: Cache builds
      #  uses: Swatinem/rust-cache@v2.7.8
      #  with:
      #    key: ${{ matrix.target }}-${{ matrix.rust }}
      - name: Cross compile binary
        run: cross build --release --locked --target ${{ matrix.target }} --verbose
      - name: Cross compile tests
        run: cross test --release --no-run --locked --target ${{ matrix.target }} --verbose
      - name: Cross test
        run: cross test --release --locked --target ${{ matrix.target }} --verbose
      - name: Compress binary
        if: matrix.rust == 'stable' && contains(matrix.target, 'musl')
        run: |
          mkdir filkoll
          cp target/${{ matrix.target }}/release/filkoll filkoll/
          if [[ -f target/${{ matrix.target }}/release/filkoll.dwp ]]; then
            # No split release info for RISCV
            cp target/${{ matrix.target }}/release/filkoll.dwp filkoll/
          fi
          tar cf filkoll.tar filkoll
          zstd -T0 -6 filkoll.tar
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: matrix.rust == 'stable' && contains(matrix.target, 'musl')
        with:
          name: filkoll_${{ matrix.target }}.tar.zst
          path: filkoll.tar.zst
          retention-days: 7
      - name: Clean up temporary items
        run: |
          rm -rf filkoll filkoll.tar filkoll.tar.zst

  configurations:
    # Test non-standard configurations, MSRV and Rust versions
    name: "Test: \"${{ matrix.features }}\" (Linux), Rust ${{ matrix.rust }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features:
          - --all-features
        rust:
          - 1.88.0
          - stable
          - nightly
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup install --profile minimal  ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - name: Get cargo-binstall
        run: |
          curl -L https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar -zxf - && mv cargo-binstall $HOME/.cargo/bin/
      - name: Cache builds
        uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0
      - name: Compile
        run: cargo test --locked ${{ matrix.features }} --verbose --no-run
      - name: Test
        run: cargo test --locked ${{ matrix.features }} --verbose
    env:
      # Warnings are ok for now here due to private APIs that will be public in the future.
      RUSTFLAGS: ""

  integration:
    name: "Integration tests"
    runs-on: ubuntu-24.04
    needs: modern-default
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: filkoll_x86_64-unknown-linux-musl.tar.zst
      - name: Unpack binaries
        run: |
          tar xf ${GITHUB_WORKSPACE}/filkoll.tar.zst
          mkdir -p target/release
          mv filkoll/* target/release/
      - name: Install podman
        run: |
          sudo apt-get update
          sudo apt-get install -y podman
          podman --version
      - name: Cache podman image
        id: cache-podman
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/podman_cache
          key: integration_tests-${{ runner.os }}-${{ hashFiles('integration_tests/images/arch/Containerfile') }}
      - name: Load cached image
        if: steps.cache-podman.outputs.cache-hit == 'true'
        run: |-
          set +ex
          podman load < ~/podman_cache/filkoll_test_img.tar
      - name: Build & cache image
        if: steps.cache-podman.outputs.cache-hit != 'true'
        run: |-
          set +ex
          cd integration_tests/images/arch
          ./build_image.sh
          mkdir -p ~/podman_cache
          podman save localhost/filkoll_test_img > ~/podman_cache/filkoll_test_img.tar
      - name: Run integration tests
        run: |-
          cd integration_tests
          ./run_tests.sh
