name: Release (helper)

on:
  workflow_call:
    inputs:
      release_name:
        type: string
        required: true
      project:
        type: string
        required: true
      archive_prefix:
        type: string
        required: true
      binaries:
        type: string
        required: true
    secrets:
      AUR_USERNAME:
        required: true
      AUR_EMAIL:
        required: true
      AUR_SSH_PRIVATE_KEY:
        required: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
  CARGO_PROFILE_RELEASE_LTO: true
  CARGO_PROFILE_RELEASE_OPT_LEVEL: 2
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CC: clang
  RUSTFLAGS: -D warnings -Clink-arg=-Wl,--compress-debug-sections=zlib
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  cargo-about:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Setup Rust
        run: rustup update stable && rustup default stable && rustup component add clippy
      - name: Get cargo-binstall
        run: |
          curl -L https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz | tar -zxf - && mv cargo-binstall $HOME/.cargo/bin/
      - name: Install required cargo addons
        run: cargo binstall --no-confirm --no-symlinks cargo-about
      - run: mkdir target && cargo about generate  about.hbs > target/licenses.html
      - name: Upload licenses.html
        run: GITHUB_TOKEN="${token}" gh release upload "${tag}" target/licenses.html --clobber
        env:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ inputs.release_name }}

  upload-aur:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Get AUR repo
        run: git clone "https://aur.archlinux.org/${PROJECT}.git" aur
        env:
          PROJECT: ${{ inputs.project }}
      - name: Update PKGBUILD
        run: |
          sed -i '/^_pkgver/s/=.*$/='${RELEASE_TAG#refs/tags/v}'/' "aur/PKGBUILD"
          sed -i '/^pkgrel/s/=.*$/=1/' "aur/PKGBUILD"
        env:
          PROJECT: ${{ inputs.project }}
          RELEASE_TAG: ${{ github.ref }}
      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: ${{ inputs.project }}
          pkgbuild: aur/PKGBUILD
          updpkgsums: true
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: New upstream release (automatic update from GitHub Actions)
